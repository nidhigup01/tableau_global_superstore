<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20182.18.0925.2120                               -->
<workbook source-build='2018.2.2 (20182.18.0925.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <CascadingFilters />
    <SortTagCleanup />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (global-superstore)' inline='true' name='federated.1s121yt1hygqsn1765meo01pkox2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='global-superstore' name='excel-direct.1rxhcgn01wg6yv15xv5p3015ugi1'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/nidhi/OneDrive/predictive analytics in business/tableau/global-superstore.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1rxhcgn01wg6yv15xv5p3015ugi1' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:X10001:no:A1:X10001:1' header='yes' lost='0' outcome='1' processed='81721'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='City' ordinal='8' />
            <column datatype='string' name='State' ordinal='9' />
            <column datatype='string' name='Country' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Market' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Product ID' ordinal='14' />
            <column datatype='string' name='Category' ordinal='15' />
            <column datatype='string' name='Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='real' name='Sales' ordinal='18' />
            <column datatype='integer' name='Quantity' ordinal='19' />
            <column datatype='real' name='Discount' ordinal='20' />
            <column datatype='real' name='Profit' ordinal='21' />
            <column datatype='real' name='Shipping Cost' ordinal='22' />
            <column datatype='string' name='Order Priority' ordinal='23' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Market</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Market]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Market</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X10001:no:A1:X10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>81721</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='profit per item' datatype='real' name='[Calculation_875105756859170819]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit] / [Quantity]' />
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_875105756882632710]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Calculation_875105756881203205]&lt;3, &quot;low&quot;, &quot;high&quot;)' />
      </column>
      <column caption='Quantity factor' datatype='string' name='[Calculation_875105757029003271]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IIF([Quantity]&lt;3, &apos;Low&apos;, IIF([Quantity]&lt;8, &apos;Medium&apos;, &apos;High&apos;))' />
      </column>
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='low profit country group' datatype='string' name='[Country (group) 2]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Albania, Algeria and 136 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Democratic Republic of the Congo&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Egypt&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Guadeloupe&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Honduras&quot;</value>
            <value>&quot;Hong Kong&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Macedonia&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Martinique&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Myanmar (Burma)&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Nicaragua&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Republic of the Congo&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Slovakia&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Korea&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Venezuela&quot;</value>
            <value>&quot;Vietnam&quot;</value>
            <value>&quot;Yemen&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Category]' new-bin='true' />
      </column>
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <group name='[Bad Products]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='AVG([Profit]) &lt; 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Product Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Categories'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.536585' group-percentage='0.0536585' measure-ordering='alphabetic' measure-percentage='0.409756' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Segment:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Home Office&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Consumer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Corporate&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1s121yt1hygqsn1765meo01pkox2].[pcto:sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1s121yt1hygqsn1765meo01pkox2].[pcdf:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Sales:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Dua axis'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk] + [federated.1s121yt1hygqsn1765meo01pkox2].[sum:Sales:qk])</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[mn:Order Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column caption='low profit country group' datatype='string' name='[Country (group) 2]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan, Albania, Algeria and 136 more&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar (Burma)&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of the Congo&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Country:nk]' />
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[Country (group) 2]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Quantity:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>([federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok] / [federated.1s121yt1hygqsn1765meo01pkox2].[qr:Order Date:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk] / [federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Barchart1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]'>
            <groupfilter from='&quot;Furniture&quot;' function='range' level='[none:Category:nk]' to='&quot;Technology&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Region:nk]' direction='DESC' using='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2011' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok]</column>
            <column>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]' />
              <lod column='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Region:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Linechart1</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.4612706899642944' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[tmn:Order Date:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</rows>
        <cols>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk] / [federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Table calculation'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Market]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Market]' derivation='None' name='[none:Market:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[pcto:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk]' direction='DESC' using='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[pcto:sum:Profit:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='barchart2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>BarChart2</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Region:nk]' direction='DESC' using='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' />
          <filter class='categorical' column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]'>
            <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Phones&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]' direction='ASC' using='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' />
          <slices>
            <column>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' num-steps='5' symmetric='false' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Region:nk] / [federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk])</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='calculated field2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column caption='Quantity factor' datatype='string' name='[Calculation_875105757029003271]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IIF([Quantity]&lt;3, &apos;Low&apos;, IIF([Quantity]&lt;8, &apos;Medium&apos;, &apos;High&apos;))' />
            </column>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_875105757029003271]' derivation='Count' name='[cnt:Calculation_875105757029003271:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_875105757029003271]' derivation='None' name='[none:Calculation_875105757029003271:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[cnt:Calculation_875105757029003271:qk]</rows>
        <cols>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk] / [federated.1s121yt1hygqsn1765meo01pkox2].[none:Calculation_875105757029003271:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='calculated fields'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column caption='profit per item' datatype='real' name='[Calculation_875105756859170819]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit] / [Quantity]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_875105756859170819]' derivation='Max' name='[max:Calculation_875105756859170819:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[max:Calculation_875105756859170819:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='group2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column caption='low profit country group' datatype='string' name='[Country (group) 2]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan, Albania, Algeria and 136 more&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Democratic Republic of the Congo&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Egypt&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Guadeloupe&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Honduras&quot;</value>
                  <value>&quot;Hong Kong&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Macedonia&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Martinique&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Myanmar (Burma)&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Nicaragua&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Republic of the Congo&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Slovakia&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Venezuela&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                  <value>&quot;Yemen&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[Country (group) 2]' />
              <lod column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Country:nk]' />
              <geometry column='[federated.1s121yt1hygqsn1765meo01pkox2].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[Latitude (generated)]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='quize2 3 small multiples'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Profit]' derivation='Min' name='[min:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[min:Profit:qk]' />
              <lod column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:State:nk]' />
              <geometry column='[federated.1s121yt1hygqsn1765meo01pkox2].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk] * [federated.1s121yt1hygqsn1765meo01pkox2].[Latitude (generated)])</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='sets'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='small multiples'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk] * [federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk])</rows>
        <cols>([federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok] / ([federated.1s121yt1hygqsn1765meo01pkox2].[qr:Order Date:ok] / [federated.1s121yt1hygqsn1765meo01pkox2].[mn:Order Date:ok]))</cols>
      </table>
    </worksheet>
    <worksheet name='table calculation2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (global-superstore)' name='federated.1s121yt1hygqsn1765meo01pkox2' />
          </datasources>
          <datasource-dependencies datasource='federated.1s121yt1hygqsn1765meo01pkox2'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcdf:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1s121yt1hygqsn1765meo01pkox2].[pcdf:sum:Sales:qk]</rows>
        <cols>[federated.1s121yt1hygqsn1765meo01pkox2].[tqr:Order Date:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]' type='filter' values='cascading' />
            <card param='[federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
          <strip size='160'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Segment:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='barchart2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk]' type='color' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='small multiples'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='quize2 3 small multiples'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[min:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[min:Profit:qk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Dua axis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1s121yt1hygqsn1765meo01pkox2].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[Country (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Calculation_875105756768321536:qk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Calculation_875105756768366593:qk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Calculation_875105756768542722:qk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='group2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[Country (group) 2]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[Country (group) 2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='sets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='calculated fields'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Sub-Category:nk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[tyr:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='calculated field2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Calculation_875105757029003271:nk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Table calculation'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Market:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='table calculation2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1s121yt1hygqsn1765meo01pkox2].[tqr:Order Date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1s121yt1hygqsn1765meo01pkox2].[pcdf:sum:Sales:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</field>
                  <field>[federated.1s121yt1hygqsn1765meo01pkox2].[tqr:Order Date:qk]</field>
                  <field>[federated.1s121yt1hygqsn1765meo01pkox2].[pcdf:sum:Sales:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Technology&quot;</value>
                <value>#2012-01-01 00:00:00#</value>
                <value>-0.55249430194467652</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[none:Category:nk]</field>
            <field>[federated.1s121yt1hygqsn1765meo01pkox2].[tyr:Order Date:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dua axis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Group' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Table calculation' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='calculated field2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='calculated fields' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='group2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='quize2 3 small multiples' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='sets' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='small multiples' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='table calculation2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO29Z3BkWXaY+d3n0ht4oFAoAOW9r+6xPTMcxyE55NBKlChurKhYcZdaiVrF
      KrjBYGzERmj3D0mJ3F2KXksNZyR6DknRBMd1T093T1d3dXV5g4KrKpg0ANI/f/fHQ6EK3QWf
      8PlFdHRl4uXLky/zvHvusUJKKWnQYJeibLYADRpsJpumAL7vb9ZbN2gwh7YZb+p5Hp7noSiN
      BajB5rJqBZC+x/D9e6S7+0nHDIYH7lJ2VI4fO8TU+CiPMwUOHTtOcXKUkqtzqK+LiUyers4O
      VFUFmPt/gwabxaoVwDYrIATlikXEzVPw4vSnqtwbzVDKTnH+zGGuXruOYUQQosLkYwcRa0dK
      iRCinp+hQYNVs2obJBRN0pSMAmCWi8TSTaRaWyhk8uihEJoeQ0oX3a9SqdaYnMwwdO8md4fG
      6yZ8gwZrpS5GeDTVQik7SWZskra9ndhmDbMyjWokOXbmPC2JKO1tabr7D+JUK/V4ywYN6sKq
      TaDydJbhiTySKVJHTrAnXWHGSXCos4m2kMPASIaTJw4hfZemtm6am+I8GHjA/kMH6il/gwZr
      QmxWIMzzvMYmuMGm0/BDNtjVNBSgwa6moQANdjUNBWiwq2koQINdTUMBGuxqGgrQYFfTUIAG
      u5qGAjTY1TQUoMGupqEADXY1DQVosKupS0mkVS1w9/4woXiaw/17Gbh7i5oMcfLIfu7dvkmy
      o5eWqKTkGLSmY/V4ywYN6kJdVoDB2/fpO36S2kyG3MQQTqST7qjNzcFh1MQechMPGR5+TCxq
      0GjC0mArUZd06KmxB9wYziJ9waGuEG7zcXrUDN8ZtdGrWTxf4knQFMH+E2dJR7RGUXyDLUFd
      TKDhRxnOX7jI8LtvQayZqckJhMzTs/c4XfFubt8fQTpVWpIxLNtFjYeARlF8g82nLiuAa5sM
      3B8g2txBT2crE4+GqMkI/T2d2NUSjhJGlyaj49Mc2L8PRYhGQcwGIaUE10Xo+maLsiVpVITt
      cMxbtyj//Vdp/Vf/crNF2ZI0jPAdjvPwEdXLb+FVGs0Inse2UgApJXZhAul7my3KtsEZH0eJ
      xTCvXNlsUbYk20oBAHynhmeVN1uMbYM7OUniuz9L7co7my3KlmRbKYAQAi3WglPO0+jqvjTS
      8/BnCsRe+ij26EP8anWzRdpybCsFAFDDcaRrIz1ns0XZ8kjTREqJEo8TOngA686dzRZpy7Ht
      FEAIBTWawq1MbbYoWx6vXEboOsIwiLxwieqblzdbpC3HtlMAAD3WjFudaZhBS+BlsmjtbQgh
      CB0+jHXvPr5pbrZYW4ptqQCKFkKoWmMzvATOxARaZycASjyO3tmBde/+Jku1tdiWCgCgx1tx
      y/nNFmNL405Oos8qgBCCyIsvUvvOdzZZqq3FtlUANZzAd0z8xmb4uUgpcTMZtI6Ouecip09h
      3r6DbIynmmPbKoBQVNRwHK86s9mibFm8qWnUdGrusdrUhNbejj08vHlCbTG2rQIAaLFmnOp0
      YzP8PKTEKxRQUql5T0cvXaT2nTc3Saitx7ZWAEWPgAyiww3m4xeLKLEYSig07/nIxQvU3rmK
      9BrpJLDNFUAIgR5vwS03YgLvxXn8GK2z433PK8kkSiKBMzq6CVJtPba1AgBokRSuWWgkyL0H
      N5tF73i/AgghCJ86SfXttzdBqq1HXRTAqkxz+c23uHn3Aa5d5Tuvv85rr71BpVrm8htvcHtg
      lKnxYSam6p+SK1QNNZTArRXqfu7tjDuZmYsBvJfoxQuY77zbMIOoU0nkwN0BYsk44WiUwvgQ
      bQfO0K1McPX+CM1dB6gWHvOo5BFOQFtTFIXATVevzasWbcIpTaJF0tAYwQoEMYDw6VPPvcZq
      ZyfS9/HyedS2tk2QbutQFwUwbZtDxw8yduMKuXiYUExBVRX0WAuyMoFjufiKSpvmMDldpSMV
      RkqJXy9/tB5B+h6uXUPRw/U55zZGCIEzPo7W3v7caywUJfAGvX2F6Gc+vQkSbh3qogAH9/dw
      6/oNfMvn1NF9XHv3Hcalx8lLH0S3NIayNQxnhocTUxxs3bcuk+L9aBrfLKKHG32HpOPgl8qo
      zc0LDiWPnD/H9O9/mcTnvnuDpds6SCnrowDJth4utewBoaAogg9+4AUkAkVVwGjmaEIAe+n1
      fVRlfeqAtWgTtcwARqoDIbb93n5NeNMzqOnUgj9+AL23F79cws3n0VpaNlC6LYTv12cTLIRA
      VTVURUEgUFQVVVUQBOnLQoigmEVV181EVzQDxYjgmY0EOW96GjWdXvQYIQTh06d3daWYdN3t
      7wZ9Fj3WjNNIkHtfDtBCRM6epbaLawT8SmVnKYAaTuC7Jr5rb7Yom4qbWdgF+iyhw4dwp/K4
      +d0ZSHQnMztLAYRQgsBYdXqzRdlUnq0DWAyhaYRPnMC8fn0DpNp6eNnszlIAAD3WMlsttjtT
      fp+kQesd7cs6PvrCJcx3392VCYVuZoetAABCMxBCwbd2ZwcEadtIy0KJLc8dbBw8iDM+gdyF
      HSPcnbgCCCHQ4q04lakNvavZjlu/wN4akLWg5le8Jwt0IZRwGKO/D/P27usY4ebzO08BALRw
      IqgX3iAzyHZchsdylCqbX3DuzUyjJlMIbfkhnuilS7uyVNLLT+1MBRCqhhZObshm2Pd9Hmem
      iYQMTNtd9/dbCndiEm1P14peYxw5jHXvHr69e7xnfrUKUu5MBQDQ4s04lfWtFpNSMpEvEouE
      aGtKYNnOpm8mnYnx56ZBL4Yai6H39mLduLlOUm093PwUanPTzlUA1YiC9NetWkxKyVSxgut5
      tDYl0DQFx9389OL3pkGblsNkfulU8egLL1C9vHuCYt7UFFpr685VAJh1iVbWxwyq1CwKpRp7
      2tIoQqAqCgjwNnkj7GZzaG2tc48rNYt8oULNWty8CZ89g31/ALlLzCA3m0VdSgEGrl/h4aNh
      fv+LX2ZiZvu5ydRoCrdW/2ox23GZzBfpakuhzWa0CiEI6fqm7wO86al5hfCm7ZBORMhOlxY1
      z5RYDK2jHXt4ZCPE3HTcyUm0jo7FFeBr3/gGr3/tr1A0n2+8fW+jZKsbQtFQQzE8s1S3c3qz
      m97WpjiRkPH0+UKBpngYy968PkW+aYLjosTjQGCmWbZDzM7guS5Vc+G7uxCCyKVLu8YM8qam
      0NqWWAE++8mPMOW1ce7ofi4e690o2epG0E69uW7t1KWUTOQKxCIhkrFI8JznUf76Nxj72X+N
      uH4N1908E8jNZFDb2+fSoH1f4rsOmqaR8PJLrgKRM6exbtxEupvvzVpPpJTBCtDWtrgCuI5L
      dWqYW0OTTJcW30z6rk1+ugBIitM5ctNFpJTks5PUbBffc6gtcgdaL9RQHOnZSG/t7z1VqOD5
      Pq1NCYQQeMUSU7/529TeepvkD/wA1oMHm1qR6U5m0J/pBOF4HkLahNOdJFJNSKtEuWYt+Hq1
      qQlhGDu+Y4R0HKRlBx0yFjvwm6+8xvd/76epVosMPc4tckbJ0MBd3rlxE6uY5fbQJJODNxnL
      TPJ4coa7d+/zcPA+1hpvjlJKSlUT31/+3VwIgRZtWvNmuFw1mSlX2dPWhADMO3fJ/Lt/h9bW
      Suv/8rNEzpzGHhxEEWLTIsLuxMS8NGjTcggpEkULYaQ6aI6HyE4VF18FLl6gevmtjRB305DV
      KsIwEKq6eEXYD/3oD/OHf/KXeOFWfuKDxxY8zizlMNUUqYjJTG6crr6j7FUzvDE0TVxT8Kwi
      kxXIlm5z4uRJDDWYErkas6RSNclOl+hsTmLoy6wuC6dw8kOIaPOqqsVsx2MiX6CzJYnqe5T+
      +u+ovPItmv+nn0bt6cEDlNZW/EKRiKZSM21CRl2K7ZaNEAI3kyF8+jTurAlTM20MXcPzJUif
      aKqVmew004UiyVj0uQ0EIhcvkvvlXyb5oz+yJVI71gN/poCSiOMLsYACSJ/XX/57MgWTrp4+
      ADL5GVJ7n99B4M7tO/ihFKOjo7Snj2DXTKqiRlPbHjpCJg/HHLSQT29zglyxSk9rAlhdTXBH
      S4py1WIsV6A1HScVjyxa+geApuFpIYRnoYUTK3o/z/OZnJqmvSlJuFIm+7v/CSUSof1//wXU
      2c0mAIkEQtfRahWcaJzYClIR6oU7MYH2qU+haRpSShzXIx4OoT0zI7ijtZlH4xPEDTCiqfef
      pKsTEQ7jjU+gd+/ZQOk3jmo+h9bairrwCiA4fOIsvc7Tu3SyKbngCc+++FEAEvEIPf193Lh2
      jTtS5+zZJG7ZobVrLyGnwMBEgROn9q1JeCEEiViYkKExnpuhatp0tqRQlMWVIOggl0cNxZdW
      mFmCSG+BeDSMducW2T/4Q5Kf/z6iH/4Q4jnKq/f24o+O4h46sqrPthak7wcxgPanNynbtjCS
      0XnHhQyNSDTOdG6S1g4dNRR976mIXLxI7erVHasAbiaD2hrESp6vAELQ0tbB1//8i3zl2zdJ
      UOPjP/6v+NT5/Yue+NDBQwCcPndh7jkt2Uo3AGla63g9DV1jX2cL2ekSw2M59rSlCYcWnoau
      hpPBiFXPRWhLT02XUlIo14gr4P/NX1G8c5fWn/2X6N3dC8u0vw93ZAR58PCqPtNa8MtlhKYh
      wkFbGNfzkb6Lps/PChVC0JpO8HCsTDQ3RKzjIIo2/5jopYtM/eZvkfjcdyOUnRcr9TJZjIMH
      gSU6w42OTfHZT36Clz5ygeni1guECSFob07S3pzgUWaa6WJlwX2FUBTUcGLZCXK+lISm89T+
      718B16X95/7toj9+AKO/H2doGIHA3+CcIG+mgJJ6ukpbtoOh8r4fNwSrQCyeoKamMbNDSG++
      21Pr6AgaZ2Wz6yavlHLJ6PR6vW9QMho4CxZUAN9z+cI/+HE+cPE0Y9MKn35h4+9qyyUeDdPb
      1UKxYjKWnVlw86bFmnGX0U5dSon5+htM/4dfIfUD30/6n/wESvT9psJ70bu7cR49RFU23hPk
      TeXRWlvnzDvLdgnr6oJ38NZUnKKjoUSbMPPD84ZmCFUlfPw4tXeurousUkpmSlWGx3IbHziU
      Eq9YRE0G+58FFeDrf/p73Mk5/N6v/0es4jjv3B/fMBlXg66p7OtsxtA1hsZy1Cz7fT901YiA
      EPj2wquZVyqR/7X/SPnr36D95/83IufPL3vPoESjCCOEVi5hOxubGOdOTKJ1PU2DNm2H8DOR
      6vei6xqJaJiSH0XRI1hTo/OuV+TcWapvvbUu2a2m5TBVrJCKRxeNTq8Lnoc0TZR4UDG3sAmk
      KIxcfxWn5QSfuHiE7NTWbz4b2LdxOltSjGVmmClV3/cF6rPVYu9FSol1/z6Z//P/wujpof3n
      /u2qGkbpe/YgpvLYzsZGU93Jp61QpJSYlkN4iaqwllScQrmGmugAKYM90uz10vv68aZn8IvF
      +srpeYzlZuhsSZGKRyhXFw7MrQfBsHAxt1daUAE+9r0/wp62Lv75f/eDGK0H+OTFrWsCPYsQ
      glgkRG9XC6VZk8jzni7vWiSFZxbnJchJz6P013/D1G/8Fk0/+ZMkPv99CH3pjfLz0Pv78EZH
      NtQEklLiTIyjzRbC+1Liew56aPE+qaqqkIyFmSpWCbXsw7PKuLOlpErIIHzqZF3NICkl49kC
      6USUaNggEtKxHXdDM2jdTAbtmXSRBRVADyf46MdeIhU16Dt8gpbE9mo6q2kqPbMm0fB4bm7D
      FcwWS+LOzhZzc3ly//4/YA8O0voLP0/42NFlmzzPw+jrwx4aBsTGFcf4Pn6xOLdi2Y6LrkgU
      bWETCIKbRXMqTqli4voQbu3DKWXmkgejL75A7cqVuogopSQ3U0aIYOV50i1Q11WsDcygdWdn
      Jz9h0WjNrcsv88bNYTRFcP4jn+bk/pWV2m02QgjamhJEwwZjmRmaUzHSiSh6vBXpWtSuXmXm
      y/+V+Gc+jXvpRWR07Upu7Ouh8HgMYwPbskjLQjru3LJu2S4hY3krmKYqpBNR8oUynS0pwq39
      1LIPEGo/ocOHmfrt38Url+cH/VZBuWZRrprs63xqVgohiEdClKsm0fDiylov3Gx2Xkv4RRXg
      ypVrfPwL/5iOeAhjieV0KxOLhNjX1cJMqYpTKGK98QaVb72KCIdp+ul/TjaWIqWpGPrao7ci
      GkW6Dppt4XpRdG19mgE/i1cqIUIGwgh+RKbtEFpmVwiApmSUwcc57KSLoYcJN/di5UcIt+0n
      fPw45vUbxD74gVXL57gek/kCe9ubUdX5Rkc0EmI8V0BKuaaVd7m4mQyRC+fnHi/6je/pSPEn
      X/4yiYjGi5/8POcOLe4H36pI18W9fRvx8ivkBoeIXrxA6p/9U/SuNiaLDuFZj0g9UEIh1HQT
      WrGAGYtviAI86QUqRGB2WZZDKh1Z9usVRaE5FSM3U6KrNY0ajqMnOzFzw4TPnaH6yqurVgDf
      lzzOTNOWTjw3UBnSNXzfx/N8tI24WUxNo7U8rZhbMBfoyrvXae85wH5vAoDoIlHWrYo7NUXl
      W69Se+stlFic+Cc+TvNP/VM83eDRRA4xkUMNx2lNp+t69zH6evEfP8Lr2BiT0c1k5ibCSylx
      XRfdWP4KAJCORxgqVrCdwHzSommka0NvCntkJGgku8xmW0+QUpKZKhI2dFKJ58dRhBBEQgZV
      0yYZX77SrhYvl0Ntbpp7vGAu0N7uPURDOu09QXpDLLl4u+2tgm/bWDdvUf7myzijo0Q/9EFa
      fuZn0Drm7/z3drYyXSgRsSbwrNCKcoSWQu/rxb4/gHLhUl3OtxTuxCRGb5Bj5Xr+bLv6laUw
      KIpCSypOdrpEd3tTsEFNtuPbVYzeXszbt4levLjs80kpKVZMTNthX2fzosfGoyHKVWvdFcC3
      LKTroCSeJkQumAvUPrtRiC+cA7dlCBLBslS++TK1K++gtbYS/65PED5zesEGUbqm0t6SxrND
      WPkRtFgzeqKtLkpg9PVR/urXCMOG2Lbu5CTRFwJlsxyXUMhYVdp3MhZhqlgJosghPVCkUIzo
      B16k9uZlIhcuLPuzWI5LdrrEvs5mlCXyiWLhENmp0rpfK296Oij6eeY9Ft0D3Hv7Ff7y66+x
      r/8Qe098gA8e21p7AGnb1K5epfzNl/GLRSKXLtH2v/4btNbWpV88i2pEiLQfxJx6iG9XCDX1
      INS1bYbVpia8/BSaEHi+P1c4v154+TxqKlihLdshvEwP0HtRlCCQmJ0u0fPMXTt0/BiFP/0z
      cF1YRnzE833GMjN0tiSX5VhQ1WCykGk78+qs642Xz6M2zw9uLirdq6+9yfd+7rt44+2bPJzI
      bwkFkL6POz5O+RvfxLz6LvrebpKf/z5CBw+uOnglVC3wgRcz1LIPCLf0rmnYnhKJoCTiiHwO
      p6NjXRVAeh5eqTQ3Eca0HJqSq5+TloiGmSpUqNYsopFgH6Emk2jtbVgDA2j9e1GNGMz68d8n
      j5SM5wokYmHiK3AsJGIRqqa9rgrg5vJorStQgB/6sR/hT/78v+GF2/jhRSrCNgrp+0z9zu9i
      Pxgk/rGXaP+Fn0dNPaeoYxUIITBSHShGhFp2ECPVhRZd/ebY6O/HHxuD1uW1KV8t3swMajyB
      MPS5LhBr8Tw9SSfJzpTZFzbmPn/0xRepXX6LaFcKa+ohQlERqoGih1D0CIoeRtF0pksW0pe0
      plcWN4iFDTLTJZqTsXUzg9zJyfeNhV1UAb718rf5/D/+Z1Tuv85bdx7xibP9zz2uVp7hwdAo
      6DGOH+7jwd1b1GSYk0f6uXf7JsmOPlqiPiXHoDW9+ruTUBTS/+DHgqSzdaq40iJJFP0AZn4E
      36lhpDpXZU8b/UFtgHLqdP2FfIYgByhQMul7+FKu2fUai4TIF8pUatbcXTx87iyFP/8K6X/0
      4xipLqTnIF0b3zHxrDJOOYvpCvJ2mK6Yi1NyZpUiNNeyfjFCho7reutqMnq5HKEj81N6FpVK
      2EW++cprvPr6ZVjkA0ihcfT4SShPMTE+iBPppDtqcWtwGDWxh9zEKMPDj4lFQ6w1O0BNJtft
      x/8ERQsRaTuA9D3MzAN8b+Upu09SIsQ6p0S4mUm09kABTMsipOtrvoM+KZrJzpTnZFfjcdR0
      CntoCCEEimYE8YJEK+HmHvSWA0z5Sbo7WgknWgCBWy1gTo1SHb9NdeIuZn4EuziJWysiPXfe
      dREiUIL1SouQUuLMNsN6lkV/Sd/1/T/KV//+a8QOXeLcgYWX8kg0yoM7N/BjzShmmXhzL82q
      xf1RG2t6ENeXVCQU3nmbgyfOkopoqy6K30i0ZBdedZpaZgAt2YUaWv6yru3dizs5gfB9HMdd
      smRztTxJg3Zdl2rNQtfVuaL4tWBoCooQzJQqc0HC6MWLlP/+q0jbRonHUSIR0DSEruP6ks50
      nFDIQEodRY/O3V2llEjXwnctpGfjVqawZ8aQCIyWPsTs6NxISKNQqhJabrODFSA8D1mtoSST
      867Pogrw51/6/xBdR2n2LaaLVdIL+Gkf332HBxmX/XsSRJvbmHg0hEmFnp4TtIU6GHw4gSJN
      pOXieB6qOru5WmfvSD1QE61ooSh2YRzh2eix5mV7iZRYHGamEF1d6xbldCYmCJ85jaZpWLZD
      PJFEq9MK2dGcZCJfIBmPoioK0Y9+BDeXo/zVr+FXq0jbRuh60GJE0xEhA0tVg+sjghlkKApC
      11Gi0eC/WAwRjaIYOggfrV2bq69OxiI8rEyjqmrd9wFeuQyahmIYcxbEkoOyW5qTXHkwSCFm
      0N5/csHjOg+conmfCwjCkTAnYi34KBiGjvQ0Dh/cj8DHcjxCxsYkPdWLJ77wcNsBnFKWWuY+
      oeZ9KEZ0yS/J6O+Dhw9x2trWJSVC+j7O6EP0vXsDc812aa9jUlk4pAf7gZky7c1J1Hicpn/y
      E0/fX0ryhQqGps4FsaSU4PtB4Ynvg+8Hk+srFfxaDb9SQVareNkKxf/217T+65/F6NkLBEU6
      ihBzcYh64k1PoyaT8OxNV/qLK8BLn/shvJe/TWd3L51tC0eCNd1A059eeOWZMPzT7gkq4dDW
      v+MvhBACI9mOakSxpkbRE+1oseZFlcDo78cdfYh+7vyCx6wFaZoIVUGJxnAdCx+BtsII8FI0
      J2MMjeVoSsbep8SlqkmpUqO3a36GJ6oKqsqzV+Z53jpvehr77t05BYAgKlyqmnVXgCfOgme/
      L88qL74J/qMv/WfSqQj3B+7w8pWBugq0XVHDccJtB3ArU1jTjxbtPG3092EPD62bLN7MTJCf
      o4igBYpe/9VVVRWaElHyz2yIIag5yE6V6GpLLxnpXYjQ8WNUL1+eV5Qfi4TWpUzSzWbnnAVP
      8MzS4gpw8tghXnnl27z21i1OH9672KG7CkUzCLcfQAiFWvbBgoO5tfZ2vJkCOOtT+O3m86gt
      LQghsGyHkLF2D9DzSCeilGvW3ACQJ2Oh2poTq446A4QOHsSbKeBVnnbzCBtBlZjr1bem2s1m
      52UISCnxrOriJpCtJfmZf/PzxMPGpjZ93YoIoRBq6sapTFHLDBBq6kYNJ+f9AEUkEuTol8t4
      seiKE9SWwstk0To7gxpg0yK6hgjwYqjqk3TpMl2tKSZnx0I96ZC9WoRhoHV2YA8MED51EqGH
      EEIQDRvUTJvEGs//hLlWKJ/4+NPnPAekv/gKIMuT/Prvfok33nidx7mtXxS/GeixZsKt/dgz
      4/hWZd7fhKIEdufEOE6d72gwOxG+oz3YADveuvYjTSei1CybzFQR2/VoTa+sxeRCRM6dxbp1
      B999OmEzHg1TqdXRDJISv1JFST7N7PSsCkoourgC9B47z0fPH0VVVZTGErAgqhFBT7bjVN4/
      h8Do7cUZHl6XmIc7OYne2YnvWPio61p8o8wGx0pVMxgLVae4RvjECcwbN4OW5bNlpNGwQdW0
      6tdczPNm6xmexnE8s4gaSiyuAA9uvM23v/V1bty6yZWByfoIs0NRn8wm5j0KsL8f59FjBPW9
      gUjPw8tPoba24thmEJld5zaGyViY/d31demqzYEnTVYsPLMMBHXKQgicOvVW8isVRMhACQfe
      SSl9fLuKFl5CAR6PTXDy5HEymSzv/WIbzEdRdRQtPPclPkHr7MQZH6POv//gjuk6KJEIlmVh
      rNMG+FmEEKv2+Cx4TlUlfOY01o1bcw3LnrS2qZr16RnkZrNozyTBSddGKBoo6gIKICW3bt/h
      9Ac+gmHE+MjHP8tnLx2qizA7GS2anmu38gS1qQlp2WCubLDHUviVShBlDYWCJlgbPI+gnoRP
      ncS8eg2EmHOJRiMhSlWrLqajOzExb3SsZ5ZRQkHW6QLqLPnaX/wBv/Jrv8nwWIaHD25xbzSz
      ZkF2OlokhWeV5mxZCO5mes9e/IcP69oAysvl0No7YDbCvhZ35GYTOnIE5/Fj8MA1g050T5pm
      1eOW4eZyaM1BgY+UEtcszuV1LaAAgu/+wo9x+vgxPvzRl/jYxz5GT/v2qAneTISqBWbQe7xB
      enc37ugo9TQjnbFx9M4OPKuKK7S6tHTZLISmoe/dizc6jmcGpZGqomDoKpa19hiKO/lMEGw2
      Me/JXIQFV4Cv/NF/4d7gIDevX+fatWtkZ8rPP7TBPLRoGq8232Vs9PfjPHy45lTwZ3nS4s+1
      a/hC35D2K+tJ5OIFzBu3gjTp2eh6LByiWDWXeOXSuLkc6mwlmO+aCFVHKMEUnecrgFD46X/x
      P3Pm5En27eth7969JKIra7OxW1EjSTyzPM8MMvr7cEbqO4DanZhA27MHy7LQ61ADsNmEjx/D
      unULNRTHqwX7qHgsvObJolJKvHx+Lgrs1Yqo4SAeYDveQptgn9fevs6JA3u5/MZrvPrqqzzO
      NgJhy0EoGkLV8Z2ndy61pQW/VkPWanWLB7hTU6jpVFAEvw17Nr0XtaUFFBVZrM117w7pGq7n
      z6VgrAZZC8b7Ppnv4Jkl1FAQMZ8pL5gKIfjUJz6OWSnS3neCto4OYuHGCrAcglc6Qf4AABkO
      SURBVLGsKdzqDIr+dICf1t6On8sh4/E1p5VIz8ObmkZJxrCyVZLbeAP8BKGqhA4fwnkwgjjS
      ju+YKHqYWCRompVaZc8gb2YGtSnYv0rPxfdsFCOClJJy1VzIBBKM3XuLX/p/fpc7t67zq7/4
      i4zkKs899P1IysVppotB9mBhKo/pePieW5cNzXZADSfxak/76gshgk3ew4f4dWia65dKKJEI
      UpHYUtnWG+BnCZ85Te2dq2iRNG41sDhikRCVRYZ7L4Wby6E2BZ3gPLuKasQQQqFq2hiatnAg
      7DvfeYsf/smf4nPf8338+Ocu8u2r95b1hlYpx417Dxm9e42JXJahhxPcuXufR0P3qTg7c+7s
      e1E0A6Fo88wgvacHZ3i4LhFhN5cLMk2tGh4aoR1gAgGEDhzAHR9HM+K4tRmklHOJcauNoXjZ
      3JwHyLPKqLNjcmdKVZLx8MLZoF179vDVP/sSr2gKjlnh9MeXFwgr5MbZs/8Ie5VJ3hjOkQyF
      sSs5Jsqglu4SPXkCXQHHcTBNc97mbcEBd7PHLPX3jTxmqb87wkBUpjCdYPlVe3upvPItLNvi
      WXfQSt9HURS88WAYhm2b6HqUWvX5I5/q8Zk38tpqmoba3Iw9/BAvrVArF/CFhpQ+hWJpXrLf
      +8ZfqSq+7897XtO02YF4nVSrVTBLOJEIZrlCpWqSiGgLK8CHPv0FPvTphf66MIYRomha1IRF
      urWbNq3MYzuGEfLpa06QLTwdlB0Ob9+W60vhh7owMwNE03sQQuADfrWCLkFfxsC9xShksmid
      HViOh2HoxFbYtHYrE7lwHvv2HSKf+SjSrRBt6ibtSnwE0VVct1I2S/jUKQxDxZSSWDJFqWIR
      j0VIJpbIBQJ4cPMKX3v5NWrLTExKdvRTHr/HrbEKh/YkSURDtHR2s6cpwcBEgZbk2r787YKi
      6iAUfCfwQohoFKEbdZm55UxMoLW1Yrty2YMwtgvhY0epvX0FLZIM2qdISTQcolxbeVpEUAeQ
      Retox7Oqs9FfwUy5OlfLsOAKMDJwl2Q6yrWhEhcOJbh84wEvnVt6TpiiGZy98LSLsJ5spScJ
      0ET7Lisq06Jp3FoBdbaA3tjXgzc6it/etqakMndiErW1BdtxSG7jHKDnoXV3B9HaUhVF0/Gt
      CmEjiuO6SMnKPGiOg3QclFgM28yjhRO4no/teETDwY1jwW9hz95u7twZpDY1yJWBPOeOPb8r
      XIOFUSOBN+jp5MU+7OFh1pIaKh0nmAqfjOGhr2sRzGYghMA4dJDau9fQYs041WkURSEcMqiu
      cLC2X6sh1KAti2+VUYwopYpJMhaeuwEtqABjww8YHHmIiKaJay756UYqxEpRtGCP88QbZPT0
      YA8OrikO4M26QD3fQ6oGqrK9UyCeR+TcWcybN2eTC4OoeixsUKqsLC3CL5VQojEkHggFoeoU
      njF/YBEFKBYLJFPNoBh88jOfpatlbUPSdiNCCLRICnc2tK91duLl82s6pzc9jZJM4Pgeuq6v
      W8e5zSR09Cj2wAOkZaPqYbxakUQ0SItYyT7AzWRQO9pxzRJqKI5lB9mlz66aC66fpy59lAO1
      KqFwYL+GjPWtNtqpqJEU1tQopLpQU0lA4JfLqInV1dR6uRxaRyemI3dECsTzEOEwWns7zuPH
      aHtacavThKOBO9lxvWUH/p4kDHpmGSPRRr5SIx2PzHPJLvyrFoJoNIa6A+8wG4mih0H6c61T
      9H09a0qMcyYm0WddoNu5CGYxhBCEzwZRYTWcwHNMpOcSjRgrigq72WAemO+YoEcoVc33dZpo
      3NbXmSA36Gml2NNB2qvDnZhAbWvDduWOSYF4HuETJ7Bu3AQEaiiOawZm0HKbZkkpg25wrc0o
      egjTdtFV9X2d8xoKsAGo0SbcWjALV+/txR5cXbe44EudRG1rxmN7F8Eshd7djV+t4pdKaNEm
      3OoMYUOnZtnLrqzzigVEIoYailMo10gn3t/PtaEAG4CihUD6SM/G2NeDPToaNI5dKa6LtCy8
      SARV09a9C8RmIlSV0JEjmNeuo4ai+I6JkIH9by9nhoDvB+7iaBgRilM1bWKR92c079wruIUQ
      QqCGg8imkkwiVDUoal8hvmkhbRtHD+24CPDziFw8j3n9OkIoc960eCRonrsUfrUalKiGw1Qs
      n0hIf25nvoYCbBBzpZJCoLW24GayKz6HNzODkkxho27rIvjlEjp4COvOXaTjoMWacavTRMNB
      89yl3KFuJoPa1opQNIpVi/QCg7obCrBBKHoI6btIz0Hv7cUZGV7xOdzMJHpXJ5bt7VgX6LMo
      8Rhadzf26CiqEQEp0YSH63lLdo1zJzNobW24aDiuR3SBuQkNBdgghFDmCmWM/tV5gtyJYMaV
      5Ti7wgSCoFbYvHYdCNrO+GaBaDhEpbq4O9TL5dDa2iiZLoloeMGa6YYCbCBaOIlbm0Hf24M9
      PLLijbA7MYHS0YFA7Jr4TOTcOcxr14NxRtE0bmWaWNigXFt8H+Bms6gd7ZQqJqn4whnIDQXY
      QJRQFN+1UJJxpB1saFeCm8lAU9O2b4GyErSOdnzTxC8UEFoIhEJU96mazqL7ADeThXQTQoCx
      yNC9hgJsIE/MIB8LJRLFm5lZ+kXP4OWnkMkUIUPb9m1QlovQdYz+Pszbd4KgYqwJv1ZAUxUs
      5/nuUCklbi4HzS0kYwubP1AnBbAqRW7euM7t+0P4vs/gvVvcvPsA33e5d+s6E/kiVrVAvrBy
      199OI6gRKKL3rSwg5psmvm3hRaI7LgV6KSJnz2LduhWYQZE0nlkkGtYX3AdIywpiJpHIkkM2
      6qIArg+Hjh7HK2SZnBiiprXQple5PTSKiHYwOTbKyPAjEovYYrsFNRRDeg5G774V5QR5U1No
      rW3Y7vbuA7oajAP7MW/cBN9H0XSEahBVvQXTIrxCASWVRNeWnpmwpltJtZhn4FGeE0cPMjpw
      CyfShKiVSTb30KY6DI5YqJVBfKAiJfnvvMHRM+dJhrfHoOz1QhhR9N4eqq9/Z9nXwZmYRGtv
      w/Z9QNZlGPZ2QaTTqE1NuJOTiPZ2lEgKv1bAtKNYlv2+AJc3NY3W0oKmKktepzUpQDTZwunj
      LYw/uIUd6eDc4TaqUw+5n82gyBzde4+yN9nDrXvDSLdGWzJG1XJoim2fQdnrQiSFL2u4mUkU
      IZ4ZJbswtWwGraMDB4GxA1ohrpTwieNU37xM6gs/gBprwi1NEjESuL4kFJr/M7ayWdS2tmX9
      vupiAqnhGOb0ONeu3UJLd9NimNRCrexNh7BqNXp6eznY38uMrdKZ3jkdDFaLGoohwjoiHMGb
      mlrWa9yJSdSODhRF7LofP0Dk/DmsO3cAEIqKGooTEg6V5xTLP6kDWA512U21d/fS3v308d6+
      g3P/DsdTBIWBIY4carRYh+ALFKoe7AMePpo3vnMhnIkJQh/8UN0HYW8XjP5+3LFxvEIBNZVC
      izZhzGTIV1XamuYXF7nZLNFDBxc403x259XcAihaKKgNGB5e8ljp+7iZLH5z866JAD+P0NEj
      WAMPgGAV1aSN77nz0qOf1gEsfVOBhgJsGkLVMfr7sYeWdoXKWg2hKPi6vqNrAJYifPYM5pUr
      wKwZFI4TwqI86w6VUuKbFfxaFSWVWtY5GwqwSQgh0Pf14I6NIZeYIewViyixGJ5QdlUU+L2E
      jx3Duj+AdIImy1q0iTA1yk/So6WPU66CoqCEltfNvKEAm4gIhUDV8AqLz17wcnnUluYdXQCz
      HJR0GiUewxkbB0ANxYnoYq5bhGlaeDULJRIBbXkr5e6+opuNogQpu5OLz2B2JifRurp2ZAuU
      lSCEIHz8OOb163OP9WgK1TcxbYei6SKmptBaW5ftKWsowCYihAjmh40+XPQ4dzIIgu1G9+d7
      CZ8/h3njxpzrU4s2ERI2xYpJtWbhzcYAlktDATYZY38f9hIpEe7EBEp7x662/5+g7+nGnZgI
      8n0A1YgQMwQzxQqq8mQo9vI8QNBQgE1H7+nBefR4wdoA6Xl40zOIdLqhAIASDhE6cgTr9p25
      58KxBPguSUPODsToWP751kPIBstHTSaD4Xnm8ws8pOsiLRM13mhN+YTwiRPU3n577rERayat
      VohFwnhTU6jNTcs+V0MBNhlhGCjJxIIbYb9SgdnuBo09QED47JmgWH521RSqTioWRjUieOUy
      ajK57HM1FGALYPT3Yz9nIxwMeMigd3ag7NIUiOehJpOIaAR31h0qhCDUsg9sB3wPEVn+RMnG
      Vd0CLDRIW/puUAjf2YnSuPvPI3LmDOaNG3OPhVBws7kVuUChoQBbAn3fvqBbnDc/d136XjAR
      fpmZjbuJ8MmTmDduzssEdXNZtI7lb4ChoQBbAq2jAy+Xx3cs5DNzhKXnBIldXZ2bKN3WRN+3
      D3diYl6HvZXGAKCOCuB7LuVKFZDUKiVKlVowjbtYwHY9pO9hL1DEvNtRDAM1lQoyPu3AGySl
      BCmDu1pzyyZLuPVQIuGg1fzo6NxzzsQk+gpXgDqlFkpGH9zl3vg0H79wjKu3RgnJKnsOHGZs
      dBzVCNESkUTa+2jZxdmMi6F1d+M+GkM0xVBDUaTvgufhzcysyK23mwifOEH1zcuEjx8HgmZY
      akvzis6xpl+j9H1cz0faJUp+hKZYlZnsY/YcOM5edZLvDGVJx5JY5QzjFYlSuk/85Ak0IXd1
      TfDzMPb34zx6jHp0L47jIJ0qlKsosThSVfF2UQ3wcgmdPEH55ZfnBmS7kxmUlpYV1UuvSQHM
      SoGh8Wmq2RFErJnR0VHakodxbRtLsUi17qFZFBmvRdANSV9znMxMZW5Q9q6tCX4ORl8fxXfe
      ISI+iCIdfM/Bmy6gzY5UXctY1R1LRweyVsPP5VDSaXzLRG/ewBUgkmjieKIJDu8HIBY22Ld/
      P+9evcYNqXLuwkG8soutxgi5M9wfn+H4qZ61vOWORe/egzMxiVCMYJqMlHj5KbQVbup2G5Hz
      5zFv3CR88uSq5q7V1SA/evQYAOcuXpp7Tk+2si8J0EJH47e/ICIUQolGoOrgymC4tjsRpEE3
      WJjw6VOU/vpvMfr7UFtW7ixorKtbBKEowRjVTB4xO/vXmU2DbrAwocOHcR49xK/W0BoKsL0x
      9u3DHhxEi6ZR9NBsEGxlbr3dhtB19N4+rHv3VhUwbCjAFkLv68V59Ag90Y4WbkLWTNSmRiuZ
      pQifPknlW6+uOAgGDQXYUujd3UELdN/Hr1QRoRBimbWtu5nImTO4kxOrMhcbCrCFUJNJpGkh
      TQt/poCSSEDD/bkkalMTRv9+1PTKA4aN28sWQmgaWkc7zthj3HwevauzUQOwDISm0fxT/z1K
      bOXdxxsKsMUwenuxHwzim+aKMxt3M0Z//6pe11hftxj6vh7skZFGGvQG0VCALYbe04M7MYmb
      yaKuoLtBg9XRMIG2GFp7O242gxKNoS6zv2WD1dNYAbYYQtPQ2tuRloUSa8xSWG8aCrDFGB4e
      5n/4i7/gX/zt3/DNV17ZbHF2PA0F2GL88R//MT/d0sr/ceIk/+lXf3WzxdnxNBRgi/HCCy/w
      pZFhfm/gPuc//OHNFmfHI2Q9yrKkxHFsfBQMXcN1HSQCXdNwbBtV11EE+D5zE/08z2sUxDwH
      KSW3b9+mUCjw4osvNgph1pm6KEA5P8ad0RypdJrejgSXr95DlQ4Hjx9j8N4goXiKtqhEa+qh
      PR1E6xoK0GArUBcFeOeNV1HjKaQw6IzamMlDdCuTXB4p0xRPYRbHcV2JFolz/PhRDFVpKECD
      LUFdBmUL1eDg0RNkbl1l2tExXA9XcYk1dRH3p6iKEGpY0tscZnK6wp6maKMovsGWoC4rgFnM
      ce3OMBKFs2ePcu2da3hS5dyli8hKnvGij+HO8DhT4tjp0yTCemMFaLAlqM8meBU0FKDBVmDT
      UiGkDHoDreZ19UoR3srnAupyvq16rifn2+xzbdoKsFp836+ba7Ceq1A95ZJS4vt+XWTzfR8h
      RN0UoF5ywdb4LrddMlw9/eL1LDapt7++XrLVW656nm8rfJfbbgVo0KCeNMKMDXY1284EWhLp
      M3D3NhXTASNOVwJGMkU0I8ax/R3cfOcyzcdeor9J4c6t21SkwYVTRwGYGLnPw3wZ17I598Il
      xgZuU6pZKJEmTh1ZXcnds5jlae7cH8G2TfYfO82ju9dwfNh3+BRecZy7j/J84sMvkh0b4XF2
      hqrl8uLF8yi4vPP2FRRNQ4+3cqy3jXevXSPa0suR/jp0jpMON9+9ieO7RJu70a0cUxWLWKqT
      PWmdqzduceaFlwi7BW49GMWpljlw5kVaYjoPbl+jYPq4vuDCuZPcvX4Ny3VItvdzoGftTb0m
      Hw0zni9QtTwuHO/jyvX7+ELlxUtnGbx3g5Id5sLpQ9y7c5viTIGeExfpSIZ4NHSHyekatuNz
      4cI5xofv8XCqykdeOD/v/DtwBRAcOHKcIwd7MWtVHk7OcOH8ORSrjBJNcfzQPlxPgtA4fOwE
      hjLriZI+j7JFLp47x/kT3dwfmKR3/yE621rwXKcukoViac6cPU1L3KAyNY6f6ObCuRM8eviI
      zp79tKaCNJHWrn2cOnEM4Tn4EoqTj0h0HuDs2fO4hSyuFuH4scPg1atjtMbxM2fo29tOtWaS
      K1lcOHeByvQk8aY2+vd24EuJEW/i7JnTNMcNTMcHv8Z0VeHc2bN0pzQmCxaHjh6jtSmBU6dZ
      EO3dvZw6cRTp2owND3HwzCUOt2k8LkoOHjlOSJGAwv4DB0lENRw3GDAykS9z/vw5TvamGZyY
      oWf/YVJR/X3n33kKIAS5x0O8e/ch586eAiEAgQCkELP/Co57/74peE6oGtLzsK0ahXINpV57
      Zenx7ttvoqT20t0cRSgKQgikL+dtCJ1agTfffJsjJ8+gqyLwlqgKCIEiQFIfr84cQjA6cJPh
      rMWpI33BuZ+cX1F4csmQHtfeehO1pZ89qRBICUJBCFAVBd+X1KolqpaPkPVRAKsyzZtvvsPx
      02dnxRGoisDzJYry9Lu0zCqeouM7T29WgiD50vMW9jbtPAXwXa5cvUkspPJ4bJKOVIQr717F
      VAzcQo7bA0MM3b9LsVTizp3bjI6MMJ6dASFoSxpcuXqNV1+/QX9/G8Mjo9iOg+3UZwXIj95j
      siypFnJU1SROdpgr79ygc08Xo4P3GBkZYWDoEe++/RZGLM7448d4viTV0U1u5C7Xrr5NSYYR
      ZpHbd+4xPPSAfLG6dsHcMldvDKNjM5mbJq7D1avvoMeamMk85sHgCPfu3GNy9A5jJZ/qTIZS
      zQE1QlSp8O61a9wazdERg8HRcRzXxanTPINrV97GiMcYe/yYjr3d3HnnMjcfV9mTlNy9dYuR
      kREejU8yMvoQx3XwZleAprjBO+9e4/Vrw/R1pRm8f5uRkRGGHk7MO//O8wJJifdk6roQKEI8
      9TdLiT/7cRVFwX8yZ1YIFEWZ83NnHg6it/TQHDOQMrg718eP7uP7T98/kCf4t/Q9ZsNMCPE0
      6PTkvaX08VyX+wODHD5yBGZniQlFWfsEyWeu2ZOYwZNrJqV8RhYxT/5AruCajTy4R0ffYSIq
      yGf+vlaeDL948p7BDLWnMj6RefZjoKhKsNrPyjU++oBYWy/JyOx2VwjUZ1aDnacADRqsgJ1n
      AjVosAIaCtBgV9NQgAa7moYCNFg3qsUcb7zxJiVzeV607NgjytbyvUcz44P8+1/6dSpSIn2H
      61cuM/Q4+5wjJa99/ZtYz/nLzosEN9gSSLfML//ir3Lpwx/kF3/5/+XnfvYnmci7xGQRUt2M
      3blMtqbziY9cYODBMNPT07zz9a+gdJ/jH/7o93HrzVdJ9RyjJwljUxV8JcrxQ3vJPhrkzRuD
      fPQjH+JLv/0bKF2XUIHb197i+vAUub//Oz7+D/9HQrVJqsUyh44f5Y1Xv8Xrr13j9Esf4vIr
      36Cl7xRdUYdsyW6sAA3Wh9r4PTrOfYrPfvZznGwRDE+O8fa1IQavv8HQZIHsVIFr3/pL3h4Y
      40u/89vYapymdDP7+vu5/8bfMFRU+es//SMeP7jGl77ydRKpOL5T4/f/y5/QllL54h/8Fc3p
      Vg4ePYAGeOUsP/aD38uP/8inuXbjPn/yxd9gytH42z/9Mn6sDUMVXPn6Vxizwvzdn/1XBu5c
      5ct/8UpDARqsD6GmTjIDtzCtKsN5k7QBjmNTLJUoTz/m0ZTPsQM9WKZF7/ELvHTpBG2tbXT3
      9mGWihSLBfb3H8CXgo9/5nvoaW9C+h7CiHH8+HEcs0JrSxsHDh9AEwJCMcbyZe7eukt7Rxvt
      fSf55IfPU7McTp86QTysUywUKBRn2H9oP74Pn/yezzcUoMH6oMS6+P6PHuJXfumXsCJtNDf3
      UH74Fo/NML17exClYab8BJ0tKY4eOYAAzn/4Q3z1D7/I/g99D9rMMBPFGk0dPXS3zA5WN+J8
      6gNH+bXf/gN+8Ed/hO6Dh0lFgvye/sPn+Msv/jojbiffdWE/R48FI3s/+5lP8eXf+S3S+w7w
      0nd/AZl5wMSMQ3t3L51NkUYgrMH6M/HoIc179mLULamqfjQUoMGu5v8HMQMqPrR8hgYAAAAA
      SUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
